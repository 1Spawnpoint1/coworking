#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã API
"""

import requests
import json
import time

def test_api():
    base_url = "http://localhost:8000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WB Review Moderation API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API...")
    try:
        response = requests.get(f"{base_url}/")
        if response.status_code == 200:
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è...")
    try:
        response = requests.get(f"{base_url}/health")
        if response.status_code == 200:
            health_data = response.json()
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–¥–æ—Ä–æ–≤–∞")
            print(f"   –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {health_data.get('model_loaded', False)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞...")
    test_texts = [
        "–û—Ç–ª–∏—á–Ω—ã–π —Ç–æ–≤–∞—Ä! –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!",
        "–≠—Ç–æ –ø–æ–ª–Ω–∞—è —Ö—É–π–Ω—è, –Ω–µ –ø–æ–∫—É–ø–∞–π—Ç–µ!",
        "–ö–∞—á–µ—Å—Ç–≤–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ, –Ω–æ –¥–æ—Å—Ç–∞–≤–∫–∞ –º–µ–¥–ª–µ–Ω–Ω–∞—è."
    ]
    
    for text in test_texts:
        try:
            response = requests.post(f"{base_url}/analyze", params={"text": text})
            if response.status_code == 200:
                result = response.json()
                verdict = "–¢–û–ö–°–ò–ß–ù–û" if result['label'] == 1 else "–ù–æ—Ä–º–∞–ª—å–Ω–æ"
                print(f"   '{text[:30]}...' -> {verdict} ({result['probability']:.2%})")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {response.status_code}")
                if response.status_code == 422:
                    print(f"   –î–µ—Ç–∞–ª–∏: {response.text}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞
    print("\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞...")
    try:
        response = requests.get(f"{base_url}/dashboard/stats")
        if response.status_code == 200:
            stats = response.json()
            print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞")
            print(f"   –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: {stats['total_reviews']}")
            print(f"   –¢–æ—á–Ω–æ—Å—Ç—å: {stats['accuracy']}%")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4.1: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    print("\n4.1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    try:
        response = requests.get(f"{base_url}/dashboard/processed-files")
        if response.status_code == 200:
            files_stats = response.json()
            print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—É—á–µ–Ω–∞")
            print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {files_stats['total_files']}")
            print(f"   –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: {files_stats['total_reviews']}")
            print(f"   –¢–æ–∫—Å–∏—á–Ω—ã—Ö: {files_stats['flagged_reviews']}")
            print(f"   –ß–∏—Å—Ç—ã—Ö: {files_stats['clean_reviews']}")
            print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç–∏: {files_stats['flag_rate']}%")
            print(f"   –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {files_stats['total_processing_time']}—Å")
            if files_stats['total_files'] > 0:
                print(f"   –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ñ–∞–π–ª—ã:")
                for file_info in files_stats['files'][-3:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Ñ–∞–π–ª–∞
                    print(f"     - {file_info['filename']}: {file_info['total_reviews']} –æ—Ç–∑—ã–≤–æ–≤")
            else:
                print(f"   {files_stats.get('message', '–ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 5: –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
    print("\n5. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤...")
    try:
        response = requests.get(f"{base_url}/dashboard/charts")
        if response.status_code == 200:
            charts = response.json()
            print("‚úÖ –î–∞–Ω–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –ø–æ–ª—É—á–µ–Ω—ã")
            print(f"   –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è: {charts['classification']['data']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_api()
